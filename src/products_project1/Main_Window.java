
package products_project1;

import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javafx.scene.input.KeyCode.L;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

;

/**
 *
 * @author user1
 */
public class Main_Window extends javax.swing.JFrame {

    /**
     * Creates new form Main_Window
     */
    public Main_Window() {
        initComponents();
        displayProductsOnTable();
    }
    
    String imagePath = null;
    int pos = 0;
    
    public Connection getConnection()
    {
        Connection con = null;
        
        try {
            con = DriverManager.getConnection("jdbc:mysql://localhost/products", "root", "");
                return con;
        } catch (SQLException ex) {
            Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Not connected");
            return null;
        } 
    }
    
    //Check input fields
    public boolean checkInputs()
    {
        if(text_name.getText() == null
           || text_price.getText() == null
           || text_date.getText() == null)
        {
           return false; 
        }
        else{
            try{
                Float.parseFloat(text_price.getText());
                return true;
            }catch(Exception ex){
                return false;
            }
        }
    }
    
    //Displaying the data that is added to the database on the JTable
    //Reading data from the database
    public ArrayList<Product> getProductList()
    {
        ArrayList<Product> productList = new ArrayList<Product>();
        Connection con = getConnection();
        String query = "SELECT * FROM product";
        Statement stat;
        ResultSet result;
        try{
            stat = con.createStatement();
            result = stat.executeQuery(query);
            Product product;
            while(result.next())
            {
               product = new Product(result.getInt("id"), result.getString("name"),Float.parseFloat(result.getString("price")), result.getString("add_date"), result.getBytes("image"));
               productList.add(product);
            }
        }catch(SQLException ex){
            Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        return productList;
    }
    
    //Adding data extracted from database to the Table
    public void displayProductsOnTable()
    {
        ArrayList<Product> products = getProductList();
        DefaultTableModel model = (DefaultTableModel)JTable_display.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        for(int i = 0; i < products.size(); i++)
        {
       
            row[0] = products.get(i).getId();
            row[1] = products.get(i).getName();
            row[2] = products.get(i).getPrice();
            row[3] = products.get(i).getDate();
            
            model.addRow(row);
        }
    }
    
    public void showItem(int index)
    {
        text_Id.setText(Integer.toString(getProductList().get(index).getId()));
        text_name.setText(getProductList().get(index).getName());
        text_price.setText(Float.toString(getProductList().get(index).getPrice()));
        text_date.setText(getProductList().get(index).getDate());
        Image_display.setIcon(ResizeImage(null, getProductList().get(index).getImage()));
    }
    //Image resize

    /**
     *
     * @param ImagePath
     * @param pic
     * @return
     */
    public ImageIcon ResizeImage(String ImagePath, byte [] pic)
    {
        ImageIcon myImage = null;
        
        if(ImagePath != null )
        {
            myImage = new ImageIcon(ImagePath);
        }
        else
        {
            myImage = new ImageIcon(pic);
        }
        
        Image img = myImage.getImage();
        Image img2 = img.getScaledInstance(Image_display.getWidth(),Image_display.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(img2);
        return image;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        text_Id = new javax.swing.JTextField();
        text_name = new javax.swing.JTextField();
        text_price = new javax.swing.JTextField();
        text_date = new javax.swing.JFormattedTextField();
        Image_display = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTable_display = new javax.swing.JTable();
        image_choice = new javax.swing.JButton();
        btn_insert = new javax.swing.JButton();
        button_Update = new javax.swing.JButton();
        button_Delete = new javax.swing.JButton();
        button_First = new javax.swing.JButton();
        button_Next = new javax.swing.JButton();
        button_Last = new javax.swing.JButton();
        button_Previous = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 153, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("ID:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Name:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Price:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Add Date:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Image:");

        text_Id.setBackground(new java.awt.Color(255, 255, 255));
        text_Id.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        text_Id.setEnabled(false);
        text_Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_IdActionPerformed(evt);
            }
        });

        text_name.setBackground(new java.awt.Color(255, 255, 255));
        text_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        text_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_nameActionPerformed(evt);
            }
        });

        text_price.setBackground(new java.awt.Color(255, 255, 255));
        text_price.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        text_price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_priceActionPerformed(evt);
            }
        });

        text_date.setBackground(new java.awt.Color(255, 255, 255));
        text_date.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        text_date.setToolTipText("MM/DD/YY");
        text_date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        Image_display.setBackground(new java.awt.Color(153, 255, 255));
        Image_display.setOpaque(true);

        JTable_display.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        JTable_display.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Price", "Add Date"
            }
        ));
        JTable_display.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTable_displayMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTable_display);

        image_choice.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        image_choice.setText("Choose image");
        image_choice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                image_choiceActionPerformed(evt);
            }
        });

        btn_insert.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_insert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/plus.png"))); // NOI18N
        btn_insert.setText("Insert");
        btn_insert.setPreferredSize(new java.awt.Dimension(97, 40));
        btn_insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insertActionPerformed(evt);
            }
        });

        button_Update.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        button_Update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/refresh.png"))); // NOI18N
        button_Update.setText("Update");
        button_Update.setPreferredSize(new java.awt.Dimension(97, 30));
        button_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_UpdateActionPerformed(evt);
            }
        });

        button_Delete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        button_Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/delete.png"))); // NOI18N
        button_Delete.setText("Delete");
        button_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_DeleteActionPerformed(evt);
            }
        });

        button_First.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        button_First.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/first.png"))); // NOI18N
        button_First.setText("First");
        button_First.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_FirstActionPerformed(evt);
            }
        });

        button_Next.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        button_Next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/next.png"))); // NOI18N
        button_Next.setText("next");
        button_Next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_NextActionPerformed(evt);
            }
        });

        button_Last.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        button_Last.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/Last.png"))); // NOI18N
        button_Last.setText("Last");
        button_Last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_LastActionPerformed(evt);
            }
        });

        button_Previous.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        button_Previous.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons/previous.png"))); // NOI18N
        button_Previous.setText("previous");
        button_Previous.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_PreviousActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(text_name)
                            .addComponent(text_date, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(image_choice, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                            .addComponent(text_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text_price, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Image_display, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(button_First, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(button_Last, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(button_Delete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(button_Next)
                .addGap(31, 31, 31)
                .addComponent(button_Previous)
                .addGap(106, 106, 106))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(text_Id, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(text_name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(text_price, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(text_date, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Image_display, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(image_choice, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(button_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn_insert, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(button_Last))
                        .addGap(7, 7, 7)
                        .addComponent(button_Delete)
                        .addGap(14, 14, 14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(button_First)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(button_Next, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(button_Previous, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(32, 32, 32))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void text_IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_IdActionPerformed

    private void text_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_nameActionPerformed

    private void text_priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_priceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_priceActionPerformed
    //Image Choice button event handling
    private void image_choiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_image_choiceActionPerformed
        JFileChooser file = new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.dir")));
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.image", "jpg", "png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        
        if(result == JFileChooser.APPROVE_OPTION)
        {
            File selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsoluteFile().toString();
            
            Image_display.setIcon(ResizeImage(path, null));
            imagePath = path;
        }
        else{
            System.out.println("No File is selected");
        }
    }//GEN-LAST:event_image_choiceActionPerformed
    
    //Insert button event handling
    private void btn_insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insertActionPerformed
      if(checkInputs() && imagePath != null) 
      {
          try{
              Connection con = getConnection();
              PreparedStatement ps = con.prepareStatement("INSERT INTO product(name, price, add_date, image)" 
                      + "values(?,?,?,?) ");
              ps.setString(1, text_name.getText());
              ps.setString(2, text_price.getText());
              ps.setString(3, text_date.getText());
              
              InputStream img = new FileInputStream(new File(imagePath));
              ps.setBlob(4, img);
              ps.executeUpdate();
              displayProductsOnTable();
              JOptionPane.showMessageDialog(null, "Data Inserted Successfully!");
          }catch(Exception ex){
             JOptionPane.showMessageDialog(null, ex.getMessage());
          }
      }
      else{
          JOptionPane.showMessageDialog(null, "One or more fields are Empty");
      }
    }//GEN-LAST:event_btn_insertActionPerformed
    
    //Updating the products list
    private void button_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_UpdateActionPerformed
      if(checkInputs() && text_Id.getText() != null)
      {
          String update = null;
          PreparedStatement ps = null;
          Connection con = getConnection();
         
            if(imagePath == null)
            {   
                try{
                    update = "UPDATE product SET name = ?, price = ?," 
                      + " add_date = ? WHERE id = ?";
                    ps = con.prepareStatement(update);
                
                    ps.setString(1, text_name.getText());
                    ps.setString(2, text_price.getText());
                    ps.setString(3, text_date.getText());
                 
                    ps.setInt(4, Integer.parseInt(text_Id.getText()));
                    
                    ps.executeUpdate();
                    displayProductsOnTable();
                    JOptionPane.showMessageDialog(null, "The Data was updated successifully");
             } catch (SQLException ex) {
              Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
            }
          }
      else{
          try{
            InputStream img = new FileInputStream(new File(imagePath));
                  
            update = "UPDATE product SET name = ?, price = ?," 
                      + " add_date = ?, image = ? WHERE id = ?";
            
             ps = con.prepareStatement(update);
                
              ps.setString(1, text_name.getText());
              ps.setString(2, text_price.getText());
              ps.setString(3, text_date.getText());
              ps.setBlob(4, img);
                 
              ps.setInt(5, Integer.parseInt(text_Id.getText()));
              
              ps.executeUpdate();
              displayProductsOnTable();
              JOptionPane.showMessageDialog(null, "The Data was updated successifully");
          }catch(Exception ex){
              JOptionPane.showMessageDialog(null, ex.getMessage());
          }
           }
        }
      else{
          JOptionPane.showMessageDialog(null, "Warning!! One or more fields are empty");
      }
    }//GEN-LAST:event_button_UpdateActionPerformed
    
    //Deleting a product from the list with a delete button
    private void button_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_DeleteActionPerformed
      if(!text_Id.getText().equals(" "))
      {
          try{
              Connection con = getConnection();
              PreparedStatement ps = con.prepareStatement("DELETE FROM product WHERE Id = ?");
              ps.setInt(1, Integer.parseInt(text_Id.getText()));
              
              ps.executeUpdate();
              displayProductsOnTable();
              JOptionPane.showMessageDialog(null, "Product was sucessifully deleted");
          } catch(SQLException ex){
              Logger.getLogger(Main_Window.class.getName()).log(Level.SEVERE, null, ex);
              JOptionPane.showMessageDialog(null, "No product was deleted");
      }
      }
      else{
          JOptionPane.showMessageDialog(null, "Id is not available thus no product was deleted");
      }
    }//GEN-LAST:event_button_DeleteActionPerformed
    
    //Move mouse to select items in a Table
    private void JTable_displayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTable_displayMouseClicked
      int index = JTable_display.getSelectedRow();
      showItem(index);
    }//GEN-LAST:event_JTable_displayMouseClicked
    
    //Button event for first item in the table
    private void button_FirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_FirstActionPerformed
        pos = 0;
        showItem(pos);
    }//GEN-LAST:event_button_FirstActionPerformed
    
    //Button event for last item in the table
    private void button_LastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_LastActionPerformed
       pos = getProductList().size() - 1;
       showItem(pos);
    }//GEN-LAST:event_button_LastActionPerformed
    
    //Button event for next item in the table
    private void button_NextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_NextActionPerformed
        pos++;
        
        if(pos >= getProductList().size())
        {
            pos = getProductList().size() - 1;
        }
        
        showItem(pos);
    }//GEN-LAST:event_button_NextActionPerformed
    
    //Button event for previous item in the table
    private void button_PreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_PreviousActionPerformed
       pos--;
       
       if(pos < 0)
       {
           pos = 0;
       }
       
       showItem(pos);
    }//GEN-LAST:event_button_PreviousActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main_Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Image_display;
    private javax.swing.JTable JTable_display;
    private javax.swing.JButton btn_insert;
    private javax.swing.JButton button_Delete;
    private javax.swing.JButton button_First;
    private javax.swing.JButton button_Last;
    private javax.swing.JButton button_Next;
    private javax.swing.JButton button_Previous;
    private javax.swing.JButton button_Update;
    private javax.swing.JButton image_choice;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField text_Id;
    private javax.swing.JFormattedTextField text_date;
    private javax.swing.JTextField text_name;
    private javax.swing.JTextField text_price;
    // End of variables declaration//GEN-END:variables

}
